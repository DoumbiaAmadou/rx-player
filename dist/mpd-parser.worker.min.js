!function(){"use strict";let n=0,e=0;const t=self;let r=null,o=null,a=null;t.onmessage=function(t){const{data:s}=t;if(0===s.type)(function(n){const e={env:{memoryBase:0,tableBase:0,memory:new WebAssembly.Memory({initial:10}),table:new WebAssembly.Table({initial:2,element:"anyfunc"}),onTagOpen:f,onCustomEvent:w,onAttribute:m,readNext:p,onTagClose:u}},t=fetch(n);return("function"==typeof WebAssembly.instantiateStreaming?WebAssembly.instantiateStreaming(t,e):Promise.reject("`WebAssembly.instantiateStreaming` API not available")).catch((async n=>{c([1,`Unable to call \`instantiateStreaming\` on WASM: ${n instanceof Error?n.toString():"unknown error"}`]);const r=await t;if(r.status<200||r.status>=300){throw new Error("WebAssembly request failed. status: "+String(r.status))}const o=await r.arrayBuffer();return WebAssembly.instantiate(o,e)})).then((n=>{r=n,o=r.instance.exports.memory}))})(s.wasmUrl).then((()=>c([0]))).catch((n=>{c([2,n instanceof Error?n.toString():"Unknown initialization error"])}));else if(1===s.type){try{!function(t){if(e=0,n=0,null===r)throw new Error("DashWasmParser not initialized");if(l)throw new Error("Parsing operation already pending.");l=!0,a={mpd:t,cursor:0};try{r.instance.exports.parse()}catch(n){throw l=!1,n}l=!1,console.error("!!!!!!!! Parse TIMER",n,e)}(s.mpd)}catch(n){return void c([3,n instanceof Error?n.toString():"Unknown parsing error"])}c([4])}else if(2===s.type){try{!function(n){if(null===r)throw new Error("DashWasmParser not initialized");if(l)throw new Error("Parsing operation already pending.");l=!0,a={mpd:n,cursor:0};try{r.instance.exports.parse_xlink()}catch(n){throw l=!1,n}l=!1}(s.xlink)}catch(n){return void c([5,n instanceof Error?n.toString():"Unknown parsing error"])}c([6])}};const s=[],i=[];function c(n){if(s.push(n),n[0]<=10)t.postMessage(s,i),s.length=0,i.length=0;else{let e=!1;if(n[0]>20){const t=n[1];i.push(t),e=e||t.byteLength>100}e&&(t.postMessage(s,i),s.length=0,i.length=0)}}let l=!1;function f(e){const t=performance.now();c([11,e]),n+=performance.now()-t}function u(e){const t=performance.now();c([12,e]),n+=performance.now()-t}function m(e,t,r){const s=performance.now();let i;if(69!==e)i=o.buffer.slice(t,t+r);else{if(null===a)return;const n=new DataView(o.buffer),e=n.getFloat64(t,!0),r=n.getFloat64(t+8,!0);i=a.mpd.slice(e,r)}c([22,i,e]),n+=performance.now()-s}function w(e,t,r){const a=performance.now(),s=o.buffer.slice(t,t+r);0===e&&console.warn((new TextDecoder).decode(s)),1===e&&c([21,s]),n+=performance.now()-a}function p(n,t){const r=performance.now();if(null===a)throw new Error("DashWasmParser Error: No MPD to read.");const{mpd:s,cursor:i}=a,c=Math.min(t,15e3,s.byteLength-i);return new Uint8Array(o.buffer,n,c).set(new Uint8Array(s,i,c)),a.cursor+=c,e+=performance.now()-r,c}}();